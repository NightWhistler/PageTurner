buildscript {
    repositories {

        mavenLocal()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven { url 'http://repo.pageturner-reader.org' }
        maven { url 'http://acra.googlecode.com/svn/repository/releases' }

        mavenCentral()

        maven {
            url 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }

    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.3'
//        classpath 'org.robolectric:robolectric-gradle-plugin:0.13.+'
        classpath 'me.tatarka:gradle-retrolambda:2.4.0'
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.5"
    }
}

apply plugin: 'com.android.application' //or apply plugin: 'java'
apply plugin: 'retrolambda'
//apply plugin: 'robolectric'
apply plugin: 'idea'
apply plugin: "org.sonarqube"

repositories {
    
    mavenLocal()

    maven { url 'http://repo.pageturner-reader.org' }
    maven { url 'http://acra.googlecode.com/svn/repository/releases' }

    mavenCentral()
    
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
    maven {
        url 'https://maven.google.com/'
        name 'Google'
    }

}

dependencies {
    compile(
        [group: 'com.actionbarsherlock', name:'actionbarsherlock', version:'4.4.0', ext: 'aar'],
        [group: 'com.android.support', name: 'support-v4', version: '19.0+'],
        [group: 'com.google.code.findbugs', name: 'jsr305', version: '1.3.9'],
        [group: 'ch.acra', name: 'acra', version: '4.4.0'],

        [group: 'org.slf4j', name: 'slf4j-android', version: '1.6.1-RC1'],
        [group: 'org.codehaus.jedi', name: 'jedi-core', version: '3.0.5']
    )

    compile( 'net.nightwhistler.htmlspanner:htmlspanner:0.5-SNAPSHOT') {
        exclude module: 'ant'
        exclude module: 'commons-io'
    }

    compile( 'com.github.rtyley:roboguice-sherlock:1.5' ) {
        transitive = false
    }

    compile('nl.siegmann.epublib:epublib-core:3.1') {
        exclude group: 'xmlpull'
        exclude group: 'org.slf4j'
        exclude group: 'net.sf.kxml'
    }

    compile ('org.roboguice:roboguice:2.0') {
        exclude module: 'asm'
    }

    provided(
        [group: 'com.google.android', name: 'annotations', version: '4.1.1.4'],
        [group: 'org.slf4j', name: 'slf4j-api', version: '1.6.1']
    )

    androidTestCompile 'com.squareup.dagger:dagger:1.1.0'
    androidTestCompile 'org.hamcrest:hamcrest-integration:1.1'
    androidTestCompile 'org.hamcrest:hamcrest-core:1.1'
    androidTestCompile 'org.hamcrest:hamcrest-library:1.1'

    androidTestCompile('org.mockito:mockito-core:1.8.4') {
        exclude module: 'hamcrest-core'
    }

    androidTestCompile('junit:junit:4.11') {
        exclude module: 'hamcrest-core'
    }
    androidTestCompile('org.robolectric:robolectric:2.3') {
        exclude module: 'classworlds'
        exclude module: 'commons-logging'
        exclude module: 'httpclient'
        exclude module: 'maven-artifact'
        exclude module: 'maven-artifact-manager'
        exclude module: 'maven-error-diagnostics'
        exclude module: 'maven-model'
        exclude module: 'maven-project'
        exclude module: 'maven-settings'
        exclude module: 'plexus-container-default'
        exclude module: 'plexus-interpolation'
        exclude module: 'plexus-utils'
        exclude module: 'wagon-file'
        exclude module: 'wagon-http-lightweight'
        exclude module: 'wagon-provider-api'
    }
    androidTestCompile 'com.squareup:fest-android:1.0.+'

    androidTestCompile( [group: 'com.actionbarsherlock', name:'actionbarsherlock', version:'4.4.0', ext: 'aar'] )
}

idea {
    module {
        downloadSources = true
    }
}

android {
    buildToolsVersion "25.0.3"
    compileSdkVersion 19

/*    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }*/

    defaultConfig {
        testInstrumentationRunner "com.google.android.apps.common.testing.testrunner.GoogleInstrumentationTestRunner"
        minSdkVersion 7

        targetSdkVersion 19
    }
    
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']

            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']

            renderscript.srcDirs = ['src']

            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        testLocal {
            java.srcDir file('test/src/java')
            res.srcDirs = ['res']
        }

       androidTest {
            setRoot('test/src')
            manifest.srcFile 'AndroidManifest.xml'
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        } 

    }

    packagingOptions {
	    exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
	}

    lintOptions {
          abortOnError false
    }

    signingConfigs {
        release {
            if ( System.getenv("KEYSTORE") ) {
                storeFile file(System.getenv("KEYSTORE"))
                storePassword System.getenv("KEYSTORE_PASSWORD")
                keyAlias System.getenv("KEY_ALIAS")
                keyPassword System.getenv("KEY_PASSWORD")
            }
        }
    }

    buildTypes {
        release {
            if ( System.getenv("KEYSTORE") ) {
                signingConfig signingConfigs.release
            }
        }
    }
}

retrolambda {
    javaVersion JavaVersion.VERSION_1_6
}

//robolectric {
//    include '**/*Test.class'
//    exclude '**/espresso/**/*.class'
//}
//
//apply plugin: 'sonar-runner'
//
//sonarRunner {
//    sonarProperties {
//        property "sonar.sourceEncoding", "UTF-8"
////        property "sonar.profile", "Android Lint"
//        property "sonar.sources", "src"
//        property "sonar.binaries", file("${project.buildDir}/intermediates/classes/debug")
//       // property "sonar.libraries", "android.sourceSets.main.runtimeClasspath"
//    }
//}

